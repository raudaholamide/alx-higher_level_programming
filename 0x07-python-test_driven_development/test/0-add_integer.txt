===========================
0. Integers addition module
===========================
Function
========.
function that adds 2 integers.

Operations
==========
a and b must be integers or floats, otherwise raise a TypeError exception
with the message a must be an integer or b must be an integer:

Import module:
    >>> add_integer = __import__('0-add_integer').add_integer

Uses:

None, none
    >>> add_integer(None, None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Int, none
    >>> add_integer(2, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

None, int:
    >>> add_integer(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

int, int:
    >>> add_integer(2, 5)
    7

float, float:
    >>> add_integer(3.4, 2.6)
    5

 Float, integer:
    >>> add_integer(3.7, 7)
    10

Integer, Float:
    >>> add_integer(5, 3.3)
    8

str, int:
    >>> add_integer("hello", 5)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

int, str
    >>> add_integer(5, "hello")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

negative integers
    >>> add_integer(-2, -10)
    -12

negative, positive
    >>> add_integer(-4, 8)
    4


list, int:
    >>> add_integer([5, 8, 7], 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


int, infinity float is passed:
    >>> add_integer(5, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Should return an error when cannot convert float NaN to integer:

    >>> add_integer(float("NaN"), 0)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Missing one argument
    >>> add_integer(25)
    123

Missing two arguments
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
